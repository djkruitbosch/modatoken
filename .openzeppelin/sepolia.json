{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xA5AeB505fb61410c3d3D600F742008694Dc43842",
      "txHash": "0xd5f064df2fd92b81cd38110ada797bae1ab2f8aef81fd54fa784f4d7e9a555b9",
      "kind": "uups"
    },
    {
      "address": "0xd4Da90Cb946cB9FeDBFa8E2834a0b6Ea06F6144e",
      "txHash": "0x9114e4bd1d13d13b4ad7df1f120e4af2ebffc35cd7a603065fdb5d87e70873f7",
      "kind": "uups"
    },
    {
      "address": "0x93db5B44c6Db6FEB266df8f91901c19632551A8B",
      "txHash": "0x2068237281de81ec53137a6d05f54afe684210a660a62968af105badebb744a2",
      "kind": "uups"
    },
    {
      "address": "0xCEBc12A16dF0d7933b7A2f172f1765aeC6254673",
      "txHash": "0xab304128c56b089f1f1af783b3031d62cd38362f1b6a5a61690934b4e0aafc54",
      "kind": "uups"
    },
    {
      "address": "0x88c8b401c4061840Be34Ec1A4b0849b3d4355F0D",
      "txHash": "0xb06627f4b55d0d694f16b5d3c31a1a8d74f295e701d701ab59fe861444250ea2",
      "kind": "uups"
    },
    {
      "address": "0x72DFdea8B76519eE310f5a2CD4BC939D7A9Ff69D",
      "txHash": "0xc2882f27032da13ed0df07bcf5bc766df90b2b387e98d5052994139c0a12a04c",
      "kind": "uups"
    }
  ],
  "impls": {
    "86f02128ad11dea2c14f375e69f0ac46d5a61d97d31da795f2a5071aa67ab142": {
      "address": "0x172eC3A77C3A7721bbdb7E517B04DDBACB344cA7",
      "txHash": "0xd3f8c10efaee8859eee8c0b01dcf43ba2bcb926e7d212f652e987eb5ceac4058",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "Token",
            "label": "holderCount",
            "type": "t_uint256",
            "src": "contracts/Token.sol:18"
          },
          {
            "contract": "Token",
            "label": "vestingContract",
            "type": "t_address",
            "src": "contracts/Token.sol:19"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
